- name: Code analysis documentation
  href: index.yml
- name: .NET code analysis
  expanded: true
  items:
  - name: Source code analysis
    expanded: true
    items:
    - name: Overview
      href: roslyn-analyzers-overview.md
    - name: Installation
      expanded: true
      items:
      - name: .NET analyzers
        href: install-net-analyzers.md
      - name: Third-party analyzers
        href: install-roslyn-analyzers.md
    - name: Configuration
      expanded: true
      items:
      - name: Overview
        href: use-roslyn-analyzers.md
      - name: .NET analyzers
        expanded: true
        items:
        - name: Code quality
          items:
          - name: Code quality options
            href: /dotnet/fundamentals/code-analysis/code-quality-rule-options?toc=%2fvisualstudio%2fcode-quality%2ftoc.json
          - name: Use EditorConfig files for code quality
            href: /dotnet/fundamentals/code-analysis/configuration-files?toc=%2fvisualstudio%2fcode-quality%2ftoc.json
        - name: Code style
          items:
          - name: Code style preferences
            href: ../ide/code-styles-and-code-cleanup.md?toc=%252fvisualstudio%252fcode-quality%252ftoc.json
          - name: Use EditorConfig files for code style
            displayName: Configure code style analyzers
            href: ../ide/create-portable-custom-editor-options.md?toc=%252fvisualstudio%252fcode-quality%252ftoc.json
          - name: Rule options
            href: /dotnet/fundamentals/code-analysis/code-style-rule-options?toc=%2fvisualstudio%2fcode-quality%2ftoc.json
      - name: Configure live code analysis
        href: configure-live-code-analysis-scope-managed-code.md
      - name: Run code analysis manually
        href: how-to-run-code-analysis-manually-for-managed-code.md
      - name: Disable code analysis
        href: disable-code-analysis.md
      - name: Automatic feature suspension
        href: automatic-feature-suspension.md
      - name: Suppress code analysis violations
        href: in-source-suppression-overview.md
    - name: FAQ
      href: analyzers-faq.yml
  - name: Legacy analysis
    items:
    - name: Overview
      displayName: static code analysis, binary analysis
      href: static-code-analysis-for-managed-code-overview.md
    - name: Legacy analysis walkthrough
      href: walkthrough-analyzing-managed-code-for-code-defects.md
    - name: Migrate to .NET analyzers
      href: migrate-from-legacy-analysis-to-net-analyzers.md
    - name: Run legacy analysis manually
      href: how-to-run-legacy-code-analysis-manually-for-managed-code.md
    - name: Configuration
      items:
      - name: Configure legacy analysis
        href: how-to-configure-code-analysis-for-a-managed-code-project.md
      - name: Enable automatic legacy code analysis
        href: how-to-enable-and-disable-automatic-code-analysis-for-managed-code.md
      - name: Customize the legacy code analysis dictionary
        href: how-to-customize-the-code-analysis-dictionary.md
    - name: Suppression
      items:
      - name: Suppress legacy analysis warnings for generated code
        href: how-to-suppress-code-analysis-warnings-for-generated-code.md
    - name: Check-in policies
      items:
      - name: How to create or update check-in policies
        href: how-to-create-or-update-standard-code-analysis-check-in-policies.md
      - name: Implement legacy analysis check-in policies
        href: implementing-custom-code-analysis-check-in-policies-for-managed-code.md
      - name: Enforce maintainable code
        href: how-to-enforce-maintainable-code-with-a-code-analysis-check-in-policy.md
      - name: Synchronize project rule sets with check-in policy
        href: how-to-synchronize-code-project-rule-sets-with-team-project-check-in-policy.md
      - name: Version compatibility
        href: version-compatibility-for-code-analysis-check-in-policies.md
    - name: Migrate to .NET analyzers
      items:
      - name: Migrate from legacy analysis to .NET analyzers
        href: migrate-from-legacy-analysis-to-net-analyzers.md
      - name: Migrate from FxCop analyzers to .NET analyzers
        href: migrate-from-fxcop-analyzers-to-net-analyzers.md
      - name: FAQ
        href: net-analyzers-faq.yml
    - name: Rule sets
      items:
      - name: Overview
        href: using-rule-sets-to-group-code-analysis-rules.md
      - name: Configure rule sets
        href: how-to-configure-code-analysis-for-a-managed-code-project.md
      - name: Create a custom rule set
        href: how-to-create-a-custom-rule-set.md
      - name: Use the rule set editor
        href: working-in-the-code-analysis-rule-set-editor.md
    - name: Reference
      items:
      - name: Ported rules
        href: fxcop-rule-port-status.md
      - name: Unported rules
        href: fxcop-unported-rules.md
        items:
        - name: Unported rules that may be ported
          href: fxcop-unported-rules-may-get-ported.md
          items:
          - name: "CA1004: Generic methods should provide type parameter"
            href: ca1004.md
          - name: "CA1007: Use generics where appropriate"
            href: ca1007.md
          - name: "CA1011: Consider passing base types as parameters"
            href: ca1011.md
          - name: "CA1013: Overload operator equals on overloading add and subtract"
            href: ca1013.md
          - name: "CA1023: Indexers should not be multidimensional"
            href: ca1023.md
          - name: "CA1049: Types that own native resources should be disposable"
            href: ca1049.md
          - name: "CA1057: String URI overloads call System.Uri overloads"
            href: ca1057.md
          - name: "CA1300: Specify MessageBoxOptions"
            href: ca1300.md
          - name: "CA1301: Avoid duplicate accelerators"
            href: ca1301.md
          - name: "CA1306: Set locale for data types"
            href: ca1306.md
          - name: "CA1402: Avoid overloads in COM visible interfaces"
            href: ca1402.md
          - name: "CA1403: Auto layout types should not be COM visible"
            href: ca1403.md
          - name: "CA1404: Call GetLastError immediately after P-Invoke"
            href: ca1404.md
          - name: "CA1405: COM visible type base types should be COM visible"
            href: ca1405.md
          - name: "CA1407: Avoid static members in COM visible types"
            href: ca1407.md
          - name: "CA1408: Do not use AutoDual ClassInterfaceType"
            href: ca1408.md
          - name: "CA1409: Com visible types should be creatable"
            href: ca1409.md
          - name: "CA1410: COM registration methods should be matched"
            href: ca1410.md
          - name: "CA1411: COM registration methods should not be visible"
            href: ca1411.md
          - name: "CA1412: Mark ComSource Interfaces as IDispatch"
            href: ca1412.md
          - name: "CA1413: Avoid non-public fields in COM visible value types"
            href: ca1413.md
          - name: "CA1414: Mark boolean P-Invoke arguments with MarshalAs"
            href: ca1414.md
          - name: "CA1415: Declare P-Invokes correctly"
            href: ca1415.md
          - name: "CA1500: Variable names should not match field names"
            href: ca1500.md
          - name: "CA1600: Do not use idle process priority"
            href: ca1600.md
          - name: "CA1601: Do not use timers that prevent power state changes"
            href: ca1601.md
          - name: "CA1704: Identifiers should be spelled correctly"
            href: ca1704.md
          - name: "CA1709: Identifiers should be cased correctly"
            href: ca1709.md
          - name: "CA1719: Parameter names should not match member names"
            href: ca1719.md
          - name: "CA1722: Identifiers should not have incorrect prefix"
            href: ca1722.md
          - name: "CA1726: Use preferred terms"
            href: ca1726.md
          - name: "CA1900: Value type fields should be portable"
            href: ca1900.md
          - name: "CA2001: Avoid calling problematic methods"
            href: ca2001.md
          - name: "CA2004: Remove calls to GC.KeepAlive"
            href: ca2004.md
          - name: "CA2006: Use SafeHandle to encapsulate native resources"
            href: ca2006.md
          - name: "CA2204: Literals should be spelled correctly"
            href: ca2204.md
          - name: "CA2205: Use managed equivalents of Win32 API"
            href: ca2205.md
          - name: "CA2212: Do not mark serviced components with WebMethod"
            href: ca2212.md
          - name: "CA2218: Override GetHashCode on overriding Equals"
            href: ca2218.md
          - name: "CA2224: Override equals on overloading operator equals"
            href: ca2224.md
          - name: "CA2232: Mark Windows Forms entry points with STAThread"
            href: ca2232.md
          - name: "CA2236: Call base class methods on ISerializable types"
            href: ca2236.md
          - name: "CA2238: Implement serialization methods correctly"
            href: ca2238.md
          - name: "CA2239: Provide deserialization methods for optional fields"
            href: ca2239.md
          - name: "CA2240: Implement ISerializable correctly"
            href: ca2240.md
        - name: Deprecated rules
          href: fxcop-unported-deprecated-rules.md
          items:
          - name: "CA1006: Do not nest generic types in member signatures"
            href: ca1006.md
          - name: "CA1009: Declare event handlers correctly"
            href: ca1009.md
          - name: "CA1020: Avoid namespaces with few types"
            href: ca1020.md
          - name: "CA1025: Replace repetitive arguments with params array"
            href: ca1025.md
          - name: "CA1026: Default parameters should not be used"
            href: ca1026.md
          - name: "CA1035: ICollection implementations have strongly typed members"
            href: ca1035.md
          - name: "CA1038: Enumerators should be strongly typed"
            href: ca1038.md
          - name: "CA1039: Lists are strongly typed"
            href: ca1039.md
          - name: "CA1048: Do not declare virtual members in sealed types"
            href: ca1048.md
          - name: "CA1059: Members should not expose certain concrete types"
            href: ca1059.md
          - name: "CA1302: Do not hardcode locale specific strings"
            href: ca1302.md
          - name: "CA1400: P-Invoke entry points should exist"
            href: ca1400.md
          - name: "CA1406: Avoid Int64 arguments for Visual Basic 6 clients"
            href: ca1406.md
          - name: "CA1504: Review misleading field names"
            href: ca1504.md
          - name: "CA1701: Resource string compound words should be cased correctly"
            href: ca1701.md
          - name: "CA1702: Compound words should be cased correctly"
            href: ca1702.md
          - name: "CA1703: Resource strings should be spelled correctly"
            href: ca1703.md
          - name: "CA1800: Do not cast unnecessarily"
            href: ca1800.md
          - name: "CA1804: Remove unused locals"
            href: ca1804.md
          - name: "CA1809: Avoid excessive locals"
            href: ca1809.md
          - name: "CA1811: Avoid uncalled private code"
            href: ca1811.md
          - name: "CA1901: P-Invoke declarations should be portable"
            href: ca1901.md
          - name: "CA1903: Use only API from targeted framework"
            href: ca1903.md
          - name: "CA2003: Do not treat fibers as threads"
            href: ca2003.md
          - name: "CA2102: Catch non-CLSCompliant exceptions in general handlers"
            href: ca2102.md
          - name: "CA2103: Review imperative security"
            href: ca2103.md
          - name: "CA2104: Do not declare read only mutable reference types"
            href: ca2104.md
          - name: "CA2105: Array fields should not be read only"
            href: ca2105.md
          - name: "CA2106: Secure asserts"
            href: ca2106.md
          - name: "CA2107: Review deny and permit only usage"
            href: ca2107.md
          - name: "CA2108: Review declarative security on value types"
            href: ca2108.md
          - name: "CA2111: Pointers should not be visible"
            href: ca2111.md
          - name: "CA2112: Secured types should not expose fields"
            href: ca2112.md
          - name: "CA2114: Method security should be a superset of type"
            href: ca2114.md
          - name: "CA2115: Call GC.KeepAlive when using native resources"
            href: ca2115.md
          - name: "CA2116: APTCA methods should only call APTCA methods"
            href: ca2116.md
          - name: "CA2117: APTCA types should only extend APTCA base types"
            href: ca2117.md
          - name: "CA2118: Review SuppressUnmanagedCodeSecurityAttribute usage"
            href: ca2118.md
          - name: "CA2120: Secure serialization constructors"
            href: ca2120.md
          - name: "CA2121: Static constructors should be private"
            href: ca2121.md
          - name: "CA2122: Do not indirectly expose methods with link demands"
            href: ca2122.md
          - name: "CA2123: Override link demands should be identical to base"
            href: ca2123.md
          - name: "CA2124: Wrap vulnerable finally clauses in outer try"
            href: ca2124.md
          - name: "CA2126: Type link demands require inheritance demands"
            href: ca2126.md
          - name: "CA2130: Security critical constants should be transparent"
            href: ca2130.md
          - name: "CA2131: Security critical types may not participate in type equivalence"
            href: ca2131.md
          - name: "CA2132: Default constructors must be at least as critical as base type default constructors"
            href: ca2132.md
          - name: "CA2133: Delegates must bind to methods with consistent transparency"
            href: ca2133.md
          - name: "CA2134: Methods must keep consistent transparency when overriding base methods"
            href: ca2134.md
          - name: "CA2135: Level 2 assemblies should not contain LinkDemands"
            href: ca2135.md
          - name: "CA2136: Members should not have conflicting transparency annotations"
            href: ca2136.md
          - name: "CA2137: Transparent methods must contain only verifiable IL"
            href: ca2137.md
          - name: "CA2138: Transparent methods must not call methods with the SuppressUnmanagedCodeSecurity attribute"
            href: ca2138.md
          - name: "CA2139: Transparent methods may not use the HandleProcessCorruptingExceptions attribute"
            href: ca2139.md
          - name: "CA2140: Transparent code must not reference security critical items"
            href: ca2140.md
          - name: "CA2141:Transparent methods must not satisfy LinkDemands"
            href: ca2141.md
          - name: "CA2142: Transparent code should not be protected with LinkDemands"
            href: ca2142.md
          - name: "CA2143: Transparent methods should not use security demands"
            href: ca2143.md
          - name: "CA2144: Transparent code should not load assemblies from byte arrays"
            href: ca2144.md
          - name: "CA2145: Transparent methods should not be decorated with the SuppressUnmanagedCodeSecurityAttribute"
            href: ca2145.md
          - name: "CA2146: Types must be at least as critical as their base types and interfaces"
            href: ca2146.md
          - name: "CA2147: Transparent methods may not use security asserts"
            href: ca2147.md
          - name: "CA2149: Transparent methods must not call into native code"
            href: ca2149.md
          - name: "CA2151: Fields with critical types should be security critical"
            href: ca2151.md
          - name: "CA2202: Do not dispose objects multiple times"
            href: ca2202.md
          - name: "CA2210: Assemblies should have valid strong names"
            href: ca2210.md
          - name: "CA2220: Finalizers should call base class finalizer"
            href: ca2220.md
          - name: "CA2221: Finalizers should be protected"
            href: ca2221.md
          - name: "CA2222: Do not decrease inherited member visibility"
            href: ca2222.md
          - name: "CA2223: Members should differ by more than return type"
            href: ca2223.md
          - name: "CA2228: Do not ship unreleased resource formats"
            href: ca2228.md
          - name: "CA2230: Use params for variable arguments"
            href: ca2230.md
          - name: "CA2233: Operations should not overflow"
            href: ca2233.md
          - name: "CA5122 P-Invoke declarations should not be safe critical"
            href: ca5122.md
        - name: Legacy analysis application errors
          items:
          - name: Legacy analysis policy errors
            href: code-analysis-policy-errors.md
          - name: Overview
            href: code-analysis-application-errors.md
          - name: "CA0001"
            href: ca0001.md
          - name: "CA0051"
            href: ca0051.md
          - name: "CA0052"
            href: ca0052.md
          - name: "CA0053"
            href: ca0053.md
          - name: "CA0054"
            href: ca0054.md
          - name: "CA0055"
            href: ca0055.md
          - name: "CA0056"
            href: ca0056.md
          - name: "CA0057"
            href: ca0057.md
          - name: "CA0058"
            href: ca0058.md
          - name: "CA0059"
            href: ca0059.md
          - name: "CA0060"
            href: ca0060.md
          - name: "CA0061"
            href: ca0061.md
          - name: "CA0062"
            href: ca0062.md
          - name: "CA0063"
            href: ca0063.md
          - name: "CA0064"
            href: ca0064.md
          - name: "CA0065"
            href: ca0065.md
          - name: "CA0066"
            href: ca0066.md
          - name: "CA0067"
            href: ca0067.md
          - name: "CA0068"
            href: ca0068.md
          - name: "CA0069"
            href: ca0069.md
          - name: "CA0070"
            href: ca0070.md
          - name: "CA0501"
            href: ca0501.md
          - name: "CA0502"
            href: ca0502.md
          - name: "CA0503"
            href: ca0503.md
          - name: "CA0504"
            href: ca0504.md
          - name: "CA0505"
            href: ca0505.md
          - name: FxCopCmd errors
            href: fxcopcmd-errors.md
      - name: Rule sets
        items:
        - name: Overview
          href: rule-set-reference.md
        - name: All Rules
          href: all-rules-rule-set.md
        - name: Basic Correctness Rules
          href: basic-correctness-rules-rule-set-for-managed-code.md
        - name: Basic Design Guideline Rules
          href: basic-design-guideline-rules-rule-set-for-managed-code.md
        - name: Extended Correctness Rules
          href: extended-correctness-rules-rule-set-for-managed-code.md
        - name: Extended Design Guidelines Rules
          href: extended-design-guidelines-rules-rule-set-for-managed-code.md
        - name: Globalization Rules
          href: globalization-rules-rule-set-for-managed-code.md
        - name: Managed Minimum Rules
          href: managed-minimum-rules-rule-set-for-managed-code.md
        - name: Managed Recommended Rules
          href: managed-recommended-rules-rule-set-for-managed-code.md
        - name: Mixed Minimum Rules
          href: mixed-minimum-rules-rule-set.md
        - name: Mixed Recommended Rules
          href: mixed-recommended-rules-rule-set.md
        - name: Native Minimum Rules
          href: native-minimum-rules-rule-set.md
        - name: Native Recommended Rules
          href: native-recommended-rules-rule-set.md
        - name: Security Rules
          href: security-rules-rule-set-for-managed-code.md
  - name: Code metrics
    items:
    - name: Overview
      displayName: code metrics
      href: code-metrics-values.md
    - name: Generate code metrics data
      href: how-to-generate-code-metrics-data.md
    - name: Work with code metrics data
      href: working-with-code-metrics-data.md
    - name: Resources
      items:
      - name: Maintainability index range and meaning
        href: code-metrics-maintainability-index-range-and-meaning.md
      - name: Class coupling
        href: code-metrics-class-coupling.md
      - name: Cyclomatic complexity
        href: code-metrics-cyclomatic-complexity.md
      - name: Depth of inheritance
        href: code-metrics-depth-of-inheritance.md
- name: C++ code analysis
  items:
  - name: Analyze C and C++ code
    href: /cpp/code-quality/code-analysis-for-c-cpp-overview
  - name: EditorConfig formatting conventions
    href: ../ide/cpp-editorconfig-properties.md
  - name: C++ code analysis warnings
    href: /cpp/code-quality/code-analysis-for-c-cpp-warnings
